/*
 * driver.c
 *
 *  Created on: Oct 28, 2021
 *      Author: khoj0332
 */

#include <stdio.h>
#include <stdlib.h>

#define MAX 50

typedef struct BSTNode* BSTNodePtr;
typedef struct BSTNode
{
	int key;
	char szData[MAX];
	BSTNodePtr psLeftChild, psRightChild;
} BSTNode;

void bstInsert(BSTNode** hsRoot, int key, char *szData, int size)
{
  BSTNode *psTmp = *hsRoot, *psParent = *hsRoot;
  if( NULL == *hsRoot) {
	  *hsRoot = (BSTNodePtr) malloc(sizeof(BSTNode));
	  (*hsRoot)->psLeftChild = (*hsRoot)->psRightChild = NULL;
	  strncpy((*hsRoot)->szData, szData, size);
  }
  else
  {
	  while( NULL != psTmp )
	  {   psParent = psTmp;

      if( key < psParent->key)
    	  psTmp = psParent->psLeftChild;

      else if ( key > psParent->key)
    	  psTmp = psParent->psRightChild;
      else
    	  return;
	  }
      if( key < psParent->key) {
    	  psParent->psLeftChild = malloc(sizeof(BSTNode));
    	  psParent->psLeftChild->psLeftChild = NULL;
    	  psParent->psLeftChild->psRightChild = NULL;
      }
      else if ( key > psParent->key) {
    	  psParent->psRightChild = malloc(sizeof(BSTNode));
    	  psParent->psRightChild->psLeftChild = NULL;
    	  psParent->psRightChild->psRightChild = NULL;
      }
  }
}

int main() {
	printf("YAY!");
	return EXIT_SUCCESS;
}
